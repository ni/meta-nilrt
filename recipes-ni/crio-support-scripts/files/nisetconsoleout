#! /bin/sh

if [ `/sbin/fw_printenv -n BIOSBootMode` = "legacy" ]; then
	exit 0
fi

case "$1" in
	start)
		# On x86_64 platform, efiConsoleOutEnable must not be empty if consoleout is supported.
		# Remove [consoleOut] section from rt_target.ini if efiConsoleOutEnable is empty since
		# consoleout is not supported.
		arch=`uname -m 2> /dev/null`
		if [ "$arch" = "x86_64" ]; then
			efiConsoleOutEnable=`fw_printenv -n BootFirmwareConsoleOutEnable 2> /dev/null`
			if [ -z "$efiConsoleOutEnable" ]; then
				rt_target_ini_file=/var/local/natinst/systemsettings/rt_target.ini
				if [ ! -f $rt_target_ini_file ]; then
					# rt_target.ini file does not exist
					exit 1
				fi

				sed -i '/^\[consoleOut\]/,/^$/d' $rt_target_ini_file
			fi
		fi
		;;

	stop)
		# compare the value save in grubenv with the one in the BIOS. If they differ, set the BIOS variable
		echo "Setting ConsoleOutEnable"
		grubConsoleOutEnableTmp=`fw_printenv -n consoleoutenable 2> /dev/null | tr '[:upper:]' '[:lower:]'`
		if [ "$grubConsoleOutEnableTmp" = "true" ]; then
			grubConsoleOutEnable=1
		else
			grubConsoleOutEnable=0
		fi

		efiConsoleOutEnable=`fw_printenv -n BootFirmwareConsoleOutEnable 2> /dev/null`

		if [ -n "$efiConsoleOutEnable" ]; then
			if [ ! "$grubConsoleOutEnable" = "$efiConsoleOutEnable" ]; then
				fw_setenv BootFirmwareConsoleOutEnable $grubConsoleOutEnable
			fi
		fi
		;;
esac

#!/bin/bash

set -o pipefail

error_and_die() {
    echo >&2 "ERROR: $1"
    exit 1
}

FILE_PATH_VOLATILES_CONFIG="/etc/default/volatiles/00_core"
PERSISTENT_DIR_VAR_LOG_LINE="d root root 0755 /var/log none"
VOLATILE_SYMLINK_VAR_LOG_LINE="l root root 0755 /var/log /var/volatile/log"

ENABLE_PERSISTENT_LOGS_INI_VAL=$(/usr/local/natinst/bin/nirtcfg --get section=SystemSettings,token=PersistentLogs.enabled,value="false" | tr "[:upper:]" "[:lower:]")

case $ENABLE_PERSISTENT_LOGS_INI_VAL in
    true)
        NEW_VAR_LOG_LINE="$PERSISTENT_DIR_VAR_LOG_LINE"
        OLD_VAR_LOG_LINE="$VOLATILE_SYMLINK_VAR_LOG_LINE"
        SUCCESS_MESSAGE="Persistent logs enabled."
        RM_VAR_LOG=true
        ;;
    false)
        NEW_VAR_LOG_LINE="$VOLATILE_SYMLINK_VAR_LOG_LINE"
        OLD_VAR_LOG_LINE="$PERSISTENT_DIR_VAR_LOG_LINE"
        SUCCESS_MESSAGE="Persistent logs disabled."
        RM_VAR_LOG=false
        ;;
    *)
        error_and_die "Unexpected value for PersistentLogs.enabled in /etc/natinst/share/ni-rt.ini. Expected True or False."
        ;;
esac

# This grep command looks for the exact new line.
OUTPUT=$(grep "^$NEW_VAR_LOG_LINE$" "$FILE_PATH_VOLATILES_CONFIG" 2>&1)
EXIT_CODE="$?"

if [ "$EXIT_CODE" = 0 ]; then
    # New line is already present, do not modify file.
    [ "${VERBOSE}" != "no" ] && echo "No changes needed to $FILE_PATH_VOLATILES_CONFIG."
    exit 0
elif [ "$EXIT_CODE" = 1 ]; then
    # This grep command looks for the exact old line, which we want to replace with the new line.
    OUTPUT=$(grep "^$OLD_VAR_LOG_LINE$" "$FILE_PATH_VOLATILES_CONFIG" 2>&1)
    EXIT_CODE="$?"
 
    if [ "$EXIT_CODE" = 0 ]; then
        # This sed command replaces the old line with the new line.
        if ! OUTPUT=$(sed "s|^$OLD_VAR_LOG_LINE$|$NEW_VAR_LOG_LINE|" -i "$FILE_PATH_VOLATILES_CONFIG" 2>&1)
        then
            error_and_die "$OUTPUT"
        fi
    elif [ "$EXIT_CODE" = 1 ]; then
        error_and_die "Could not locate expected /var/log entry in $FILE_PATH_VOLATILES_CONFIG."
    else
        error_and_die "$OUTPUT"
    fi

else
    error_and_die "$OUTPUT"
fi

if ! OUTPUT=$(rm -rf /etc/volatile.cache 2>&1)
then
    error_and_die "$OUTPUT"
fi

if [ "$RM_VAR_LOG" = true ]; then
    if ! OUTPUT=$(rm -rf /var/log 2>&1)
    then
        error_and_die "$OUTPUT"
    fi
fi

[ "${VERBOSE}" != "no" ] && echo "$SUCCESS_MESSAGE"
exit 0

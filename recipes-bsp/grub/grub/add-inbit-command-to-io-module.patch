From 48de0b2faec205e874099e0afdc14ab70919e702 Mon Sep 17 00:00:00 2001
From: Adrian Papp <adrian.papp@ni.com>
Date: Thu, 20 Feb 2014 15:01:05 +0200
Subject: [PATCH] add inbit command to io module

* grub-core/commands/iorw.c: Add grub_cmd_read_bit and register inbit
command
---
 grub-core/commands/iorw.c | 33 ++++++++++++++++++++++++++++++++-
 1 file changed, 32 insertions(+), 1 deletion(-)

diff --git a/grub-core/commands/iorw.c b/grub-core/commands/iorw.c
index 584baec8f..45a79ed7f 100644
--- a/grub-core/commands/iorw.c
+++ b/grub-core/commands/iorw.c
@@ -27,6 +27,7 @@
 
 GRUB_MOD_LICENSE ("GPLv3+");
 
+static grub_extcmd_t cmd_read_bit;
 static grub_extcmd_t cmd_read_byte, cmd_read_word, cmd_read_dword;
 static grub_command_t cmd_write_byte, cmd_write_word, cmd_write_dword;
 
@@ -37,7 +38,6 @@ static const struct grub_arg_option options[] =
     {0, 0, 0, 0, 0, 0}
   };
 
-
 static grub_err_t
 grub_cmd_read (grub_extcmd_context_t ctxt, int argc, char **argv)
 {
@@ -75,6 +75,32 @@ grub_cmd_read (grub_extcmd_context_t ctxt, int argc, char **argv)
   return 0;
 }
 
+static grub_err_t
+grub_cmd_read_bit(grub_extcmd_context_t ctxt, int argc, char **argv)
+{
+  grub_port_t addr;
+  grub_uint32_t index = 0;
+  grub_uint32_t value = 0;
+  grub_uint32_t bit_value = 0;
+  if (argc != 2)
+    return grub_error (GRUB_ERR_BAD_ARGUMENT, N_("two arguments expected: address and bit index"));
+
+  addr = grub_strtoul (argv[0], 0, 0);
+  index  = grub_strtoul (argv[1], 0, 0);
+  value = grub_inb (addr);
+  bit_value = (value & (1 << index)) ? 1 : 0;
+  if (ctxt->state[0].set)
+    {
+      char buf[sizeof ("XXXXXXXX")];
+      grub_snprintf (buf, sizeof (buf), "%d", bit_value);
+      grub_env_set (ctxt->state[0].arg, buf);
+    }
+  else
+    grub_printf ("%d\n", bit_value);
+
+  return 0;
+}
+
 static grub_err_t
 grub_cmd_write (grub_command_t cmd, int argc, char **argv)
 {
@@ -131,6 +157,10 @@ GRUB_MOD_INIT(memrw)
     grub_register_extcmd ("inl", grub_cmd_read, 0,
 			  N_("PORT"), N_("Read 32-bit value from PORT."),
 			  options);
+  cmd_read_bit =
+    grub_register_extcmd ("inbit", grub_cmd_read_bit, 0,
+			  N_("PORT"), N_("Read 1-bit value from PORT."),
+			  options);
   cmd_write_byte =
     grub_register_command_lockdown ("outb", grub_cmd_write,
                                     N_("PORT VALUE [MASK]"),
@@ -150,6 +180,7 @@ GRUB_MOD_FINI(memrw)
   grub_unregister_extcmd (cmd_read_byte);
   grub_unregister_extcmd (cmd_read_word);
   grub_unregister_extcmd (cmd_read_dword);
+  grub_unregister_extcmd (cmd_read_bit);
   grub_unregister_command (cmd_write_byte);
   grub_unregister_command (cmd_write_word);
   grub_unregister_command (cmd_write_dword);
-- 
2.25.1


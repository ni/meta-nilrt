From 4d93e86498b4dad6b614c2fda738aba3c22145f4 Mon Sep 17 00:00:00 2001
From: Richard Tollerton <rich.tollerton@ni.com>
Date: Thu, 25 Mar 2021 18:30:14 -0500
Subject: [PATCH 23/25] Revert "altsvc: make saving the cache an atomic
 operation"

This reverts commit 14916a82e23c22e1f3d3ebbd90421eb747480e99.

Uses Curl_rename(), which presently is implemented on Win32 with MoveFileEx(),
which does not exist on Phar Lap.

Upstream-Status: Inappropriate [wacky builds]
Signed-off-by: Richard Tollerton <rich.tollerton@ni.com>
---
 lib/altsvc.c          | 45 ++++++++++++-------------------------------
 lib/altsvc.h          |  9 ++++-----
 lib/url.c             |  2 +-
 tests/unit/unit1654.c |  4 ++--
 4 files changed, 19 insertions(+), 41 deletions(-)

diff --git a/lib/altsvc.c b/lib/altsvc.c
index c2ec489d9..35fcf5bd5 100644
--- a/lib/altsvc.c
+++ b/lib/altsvc.c
@@ -34,8 +34,6 @@
 #include "parsedate.h"
 #include "sendf.h"
 #include "warnless.h"
-#include "rand.h"
-#include "rename.h"
 
 /* The last 3 #include files should be in this order */
 #include "curl_printf.h"
@@ -320,15 +318,12 @@ void Curl_altsvc_cleanup(struct altsvcinfo *altsvc)
 /*
  * Curl_altsvc_save() writes the altsvc cache to a file.
  */
-CURLcode Curl_altsvc_save(struct Curl_easy *data,
-                          struct altsvcinfo *altsvc, const char *file)
+CURLcode Curl_altsvc_save(struct altsvcinfo *altsvc, const char *file)
 {
   struct curl_llist_element *e;
   struct curl_llist_element *n;
   CURLcode result = CURLE_OK;
   FILE *out;
-  char *tempstore;
-  unsigned char randsuffix[9];
 
   if(!altsvc)
     /* no cache activated */
@@ -341,36 +336,20 @@ CURLcode Curl_altsvc_save(struct Curl_easy *data,
   if((altsvc->flags & CURLALTSVC_READONLYFILE) || !file || !file[0])
     /* marked as read-only, no file or zero length file name */
     return CURLE_OK;
-
-  if(Curl_rand_hex(data, randsuffix, sizeof(randsuffix)))
-    return CURLE_FAILED_INIT;
-
-  tempstore = aprintf("%s.%s.tmp", file, randsuffix);
-  if(!tempstore)
-    return CURLE_OUT_OF_MEMORY;
-
-  out = fopen(tempstore, FOPEN_WRITETEXT);
+  out = fopen(file, FOPEN_WRITETEXT);
   if(!out)
-    result = CURLE_WRITE_ERROR;
-  else {
-    fputs("# Your alt-svc cache. https://curl.haxx.se/docs/alt-svc.html\n"
-          "# This file was generated by libcurl! Edit at your own risk.\n",
-          out);
-    for(e = altsvc->list.head; e; e = n) {
-      struct altsvc *as = e->ptr;
-      n = e->next;
-      result = altsvc_out(as, out);
-      if(result)
-        break;
-    }
-    fclose(out);
-    if(!result && Curl_rename(tempstore, file))
-      result = CURLE_WRITE_ERROR;
-
+    return CURLE_WRITE_ERROR;
+  fputs("# Your alt-svc cache. https://curl.haxx.se/docs/alt-svc.html\n"
+        "# This file was generated by libcurl! Edit at your own risk.\n",
+        out);
+  for(e = altsvc->list.head; e; e = n) {
+    struct altsvc *as = e->ptr;
+    n = e->next;
+    result = altsvc_out(as, out);
     if(result)
-      unlink(tempstore);
+      break;
   }
-  free(tempstore);
+  fclose(out);
   return result;
 }
 
diff --git a/lib/altsvc.h b/lib/altsvc.h
index 578a4fbfb..7a0ee816a 100644
--- a/lib/altsvc.h
+++ b/lib/altsvc.h
@@ -7,7 +7,7 @@
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 2019 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 2019, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
@@ -58,8 +58,7 @@ struct altsvcinfo {
 const char *Curl_alpnid2str(enum alpnid id);
 struct altsvcinfo *Curl_altsvc_init(void);
 CURLcode Curl_altsvc_load(struct altsvcinfo *asi, const char *file);
-CURLcode Curl_altsvc_save(struct Curl_easy *data,
-                          struct altsvcinfo *asi, const char *file);
+CURLcode Curl_altsvc_save(struct altsvcinfo *asi, const char *file);
 CURLcode Curl_altsvc_ctrl(struct altsvcinfo *asi, const long ctrl);
 void Curl_altsvc_cleanup(struct altsvcinfo *altsvc);
 CURLcode Curl_altsvc_parse(struct Curl_easy *data,
@@ -70,9 +69,9 @@ bool Curl_altsvc_lookup(struct altsvcinfo *asi,
                         enum alpnid srcalpnid, const char *srchost,
                         int srcport,
                         struct altsvc **dstentry,
-                        const int versions); /* CURLALTSVC_H* bits */
+                        int versions); /* one or more CURLALTSVC_H* bits */
 #else
 /* disabled */
-#define Curl_altsvc_save(a,b,c)
+#define Curl_altsvc_save(a,b)
 #endif /* CURL_DISABLE_HTTP || USE_ALTSVC */
 #endif /* HEADER_CURL_ALTSVC_H */
diff --git a/lib/url.c b/lib/url.c
index 150667aa9..5db0e66da 100644
--- a/lib/url.c
+++ b/lib/url.c
@@ -393,7 +393,7 @@ CURLcode Curl_close(struct Curl_easy **datap)
   Curl_safefree(data->state.ulbuf);
   Curl_flush_cookies(data, TRUE);
 #ifdef USE_ALTSVC
-  Curl_altsvc_save(data, data->asi, data->set.str[STRING_ALTSVC]);
+  Curl_altsvc_save(data->asi, data->set.str[STRING_ALTSVC]);
   Curl_altsvc_cleanup(data->asi);
   data->asi = NULL;
 #endif
diff --git a/tests/unit/unit1654.c b/tests/unit/unit1654.c
index 79e97631c..b9f9d7251 100644
--- a/tests/unit/unit1654.c
+++ b/tests/unit/unit1654.c
@@ -5,7 +5,7 @@
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 2019 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 2019, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
@@ -127,7 +127,7 @@ UNITTEST_START
   }
   fail_unless(asi->list.size == 10, "wrong number of entries");
 
-  Curl_altsvc_save(curl, asi, outname);
+  Curl_altsvc_save(asi, outname);
 
   curl_easy_cleanup(curl);
   fail:
-- 
2.30.0


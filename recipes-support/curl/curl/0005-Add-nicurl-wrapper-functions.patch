From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jonathan David <jonathan.david@ni.com>
Date: Tue, 15 Mar 2016 13:26:34 -0500
Subject: [PATCH] Add nicurl wrapper functions

Added the following API wrapper functions:
nicurl_easy_getinfo
nicurl_easy_setopt
nicurl_formadd
nicurl_multi_setopt
nicurl_share_setopt

These functions are called by older NI components, and exist as
a means to keep previous code running.

Upstream-Status: Inappropriate [NI specific changes]

diff --git a/lib/easy.c b/lib/easy.c
index 9a5f09fce..1e2b0aaa4 100644
--- a/lib/easy.c
+++ b/lib/easy.c
@@ -308,6 +308,16 @@ struct Curl_easy *curl_easy_init(void)
   return data;
 }
 
+#ifdef ENABLE_NICURL_API
+CURL_EXTERN CURLcode nicurl_easy_setopt(CURL *curl, CURLoption tag, va_list arg)
+{
+  CURLcode result;
+  result = Curl_vsetopt(curl, tag, arg);
+  va_end(arg);
+  return result;
+}
+#endif
+
 #ifdef CURLDEBUG
 
 struct socketmonitor {
@@ -769,6 +779,17 @@ CURLcode curl_easy_getinfo(struct Curl_easy *data, CURLINFO info, ...)
   return result;
 }
 
+#ifdef ENABLE_NICURL_API
+CURL_EXTERN CURLcode nicurl_easy_getinfo(CURL *curl, CURLINFO info, va_list arg)
+{
+/* Unlike other nicurl functions, this one did not previously call va_start()
+ * nor va_end(). Thus, it can behave as expected of variadic functions that
+ * are passed va_list.
+ */
+  return curl_easy_getinfo_va(curl, info, arg);
+}
+#endif
+
 static CURLcode dupset(struct Curl_easy *dst, struct Curl_easy *src)
 {
   CURLcode result = CURLE_OK;
diff --git a/lib/formdata.c b/lib/formdata.c
index 1c85b2a1d..a5a560acf 100644
--- a/lib/formdata.c
+++ b/lib/formdata.c
@@ -709,6 +709,18 @@ CURLFORMcode curl_formadd(struct curl_httppost **httppost,
   return result;
 }
 
+#ifdef ENABLE_NICURL_API
+CURL_EXTERN CURLFORMcode nicurl_formadd(struct curl_httppost **httppost,
+                                        struct curl_httppost **last_post,
+                                        va_list arg)
+{
+  CURLFORMcode result;
+  result = curl_formadd_va(httppost, last_post, arg);
+  va_end(arg);
+  return result;
+}
+#endif
+
 /*
  * curl_formget()
  * Serialize a curl_httppost struct.
diff --git a/lib/multi.c b/lib/multi.c
index 4cd825d6c..13c8c57ff 100644
--- a/lib/multi.c
+++ b/lib/multi.c
@@ -2997,6 +2997,17 @@ CURLMcode curl_multi_setopt(struct Curl_multi *multi,
   return res;
 }
 
+#ifdef ENABLE_NICURL_API
+CURL_EXTERN CURLMcode nicurl_multi_setopt(CURLM *multi_handle,
+                            CURLMoption option, va_list param)
+{
+  CURLMcode result;
+  result = curl_multi_setopt_va(multi_handle, option, param);
+  va_end(param);
+  return result;
+}
+#endif
+
 /* we define curl_multi_socket() in the public multi.h header */
 #undef curl_multi_socket
 
diff --git a/lib/share.c b/lib/share.c
index ab215daf9..a57e78b7b 100644
--- a/lib/share.c
+++ b/lib/share.c
@@ -189,6 +189,17 @@ curl_share_setopt(struct Curl_share *share, CURLSHoption option, ...)
   return res;
 }
 
+#ifdef ENABLE_NICURL_API
+CURLSHcode
+CURL_EXTERN nicurl_share_setopt(CURLSH *sh, CURLSHoption option, va_list param)
+{
+  CURLSHcode result;
+  result = curl_share_setopt_va(sh, option, param);
+  va_end(param);
+  return result;
+}
+#endif
+
 CURLSHcode
 curl_share_cleanup(struct Curl_share *share)
 {
-- 
2.28.0

